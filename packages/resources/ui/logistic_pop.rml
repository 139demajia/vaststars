<rml>
    <head>
        <style>
            .recipe-panel {
                background-color: rgb(44, 32, 18);
                border: 0.2vmin rgb(89, 73, 39);
                border-radius: 0.67vmin;
                margin:auto 0.3em;
                width: 30%;
                height: 90%;
                justify-content: space-evenly;
            }
            .recipe-name-block {
                background-color: rgb(203, 118, 24);
                width: 100%;
                height:5%;
                flex-direction: row;
                justify-content: space-between;
                align-items: center;
                border: 0.10vmin rgb(89, 73, 39);
            }
            .recipe-time-block {
                flex-direction: row;
                align-items: center;
            }
            .name-block {
                background-color: rgb(203, 118, 24);
                height:100%;
                flex-direction: row;
                justify-content: flex-start;
                align-items: center;
            }
            .recipe-change-block {
                width: 100%;
                height:40%;
                flex-direction: column;
                align-items: flex-start;
                border: 0.10vmin rgb(89, 73, 39);
                background-color: rgb(44, 32, 18);
            }
            .recipe-button-block {
                width: 100%;
                height:15%;
                flex-direction: row;
                align-items: flex-end;
                justify-content: space-evenly;
                background-color: rgb(44, 32, 18);
                font-size: 3.47vmin;
            }
            .recipe-name-text {
                padding-bottom: 0.3em;
                margin:0 0.6em 0 0;
                font-size: 3.73vmin;
                text-align: center;
                -webkit-text-stroke: 0.05em rgb(0,0,0);
            }
            .two-recipe-block {
                flex-direction: column;
                justify-content: space-evenly;
                align-items: center;
                background-color: rgb(44, 32, 18);
                font-size: 3.73vmin;
                background-size: cover;
                border-radius: 0.27vmin;
                width: 100%;
                height:80%;
            }
            .materials-block {
                flex-direction: column;
                justify-content: center;
                align-items: flex-start;
                background-size: cover;
                border-radius: 0.27vmin;
                width: 100%;
                height:80%;
            }
            .materials {
                flex-direction: row;
                justify-content: space-between;
                align-items: center;
                background-size: cover;
                width: 100%;
                height:15%;
            }
            .materials-item {
                flex-direction: row;
                justify-content: flex-start;
                align-items: center;
            }
            .materials-icon {
                margin-left: 0.5em;
                width: 3.67vmin;
                height: 3.67vmin;
                background-color: rgb(250, 205, 9);;
                flex-direction: row;
                justify-content: flex-start;
                align-items: center;
                background-size: cover;
            }
            .materials-name {
                padding-bottom: 0.3em;
                padding-left: 0.2em;
                padding-right:1em;
                font-size: 3.73vmin;
                text-align: center;
            }
            .materials-num {
                padding-bottom: 0.3em;
                padding-right:1em;
                font-size: 3.73vmin;
                text-align: center;
            }
            .building-info {
                margin-top:1em;
                width: 28%;
                height:80%;
                flex-direction: column;
                align-items: center;
                justify-content: space-evenly;
            }
            .drone-title-block {
                width:32%;
                height:8%;
                flex-direction: row;
                justify-content: flex-start;
                background-color: rgb(255,217,102);
                border-radius: 0.67vmin;
                border: 0.13vmin rgb(89, 73, 39);
                align-items: center;
            }
            .drone-pic {
                margin-left: 0.2em;
                width: 3.33vmin;
                height: 3.33vmin;
                background-size:cover;
                background-image: "textures/construct/drone1.texture";
            }
            .drone-title {
                margin-bottom: 0.2em;
                font-size: 3.47vmin;
                color:rgb(255,255,255);
                -webkit-text-stroke: 0.13vmin rgb(89, 73, 39);
                text-align: left;
            }
            .item-info-block {
                flex-direction: column;
                justify-content: center;
                align-items: center;
                width:100%;
                height:60%;
            }
            .item-recipe-block {
                flex-direction: column;
                align-items: center;
                width:100%;
                height:30%;
            }
            .item-building-block {
                flex-direction: column;
                align-items: center;
                width:100%;
                height:28%;
            }
            .item-button-block {
                flex-direction: row;
                align-items: center;
                justify-content: space-evenly;
                width:100%;
                height:12%;
            }
            .pre-title-block {
                justify-content: center;
                width:20%;
                height:5vmin; 
                background-color: rgb(255,217,102);
                border-radius: 0.37vmin;
                border: 0.13vmin rgb(89, 73, 39);
                font-size: 3.47vmin;
                color:rgb(255,255,255);
                -webkit-text-stroke: 0.13vmin rgb(89, 73, 39);
                text-align: center;
            }
            .small-item-1 {
                flex-direction: column;
                align-items:center;
                justify-content:flex-end;
                background-color: rgb(250, 205, 9);
                border: 0.27vmin rgb(89, 73, 39);
                background-size:cover;
                width: 8.00vmin;
                height: 8.00vmin;
                font-size: 4.40vmin;
                background-image: "textures/construct/insert1.texture";
            }
            .small-item-count {
                margin-bottom: -0.1em;
                font-size: 4vmin;
                text-align:center;
                color:rgb(87, 238, 0);
                -webkit-text-stroke: 0.2vmin rgb(0, 0, 0);
            }
            .small-arrow {
                margin: auto 0.2em;
                width:61px;
                height:47px;
                background-image:"textures/exchange/right_arrow.texture";
                background-size:cover
            }
            .small-building {
                width:50px;
                height:70px;
                background-image: "textures/assemble/engine.texture";
                background-size: cover;
            }
            .draw-separator {
                width: 100%;
                border-bottom: 1.5px rgb(89, 73, 39);
            }
        </style>
        <style path = "common/building_style.rcss"/>
        <style path = "common/listpage_style.rcss"/>
        <script type="text/x-lua" >
            local ui_sys = require "ui_system"
            local start = ui_sys.createDataMode("start", {
                catalog_index = 1,
                items = {},
                recipe_menu = {},
                object_id = 0,
                recipe_name = "",
                recipe_time = " ",
                recipe_ingredients = {},
                recipe_results = {},
            })

            local function clickItem(index)
            end

            function start.clickClose(event)
                ui_sys.close()
            end

            function start.clickConfirm(event)
                ui_sys.close()
            end

            -- <!-- tag page begin -->
            local select_item
            function start.clickCatalog(event, it_index)
                start.catalog_index = it_index + 1
                start.items = start.recipe_menu[it_index + 1].item
                select_item = nil
                start.page:on_dirty(#start.items)
            end

            local function page_item_renderer(item, index)
                item.removeEventListener('click')
                if index > #start.items then
                    item.outerHTML = [[<div style = "width: 12.00vmin; height: 12.00vmin;" />]]
                else
                    item.outerHTML = ([[<div class = "item" style = "backgroundImage: %s" />]]):format(start.items[index].icon)
                    local select_style_border = "5px green"
                    if start.recipe_name == start.items[index].name then
                        select_item = item
                        item.style.border = select_style_border
                    end

                    item.addEventListener('click', function(event)
                        if select_item then
                            select_item.style.border = '0px green'
                        end
                        item.style.border = select_style_border
                        clickItem(index)
                        select_item = item
                    end)
                end
            end
            local function page_item_init(item, index)
                page_item_update(item, index)
            end
            local pageclass = require "page"
            window.customElements.define("page", function(e)
                start.page = pageclass.create(document, e, page_item_init, page_item_update)
            end)
            -- <!-- tag page end -->

            local function get_recipe_index(recipe_menu, recipe_name)
                for index, v1 in ipairs(recipe_menu) do
                    for recipe_index, v2 in ipairs(v1.item) do
                        if v2.name == recipe_name then
                            return index, recipe_index
                        end
                    end
                end

                console.log(("can not found recipe `%s`"):format(recipe_name))
                return 1, 1
            end

            ui_sys.addEventListener({
                ["INIT"] = function(recipe_menu, object_id, recipe_name)
                    local recipe_index = 1
                    start.object_id = object_id
                    start.recipe_menu = recipe_menu

                    if recipe_name and recipe_name ~= "" then
                        start.catalog_index, recipe_index = get_recipe_index(recipe_menu, recipe_name)
                        start.recipe_name = recipe_name
                    end
                    start.items = start.recipe_menu[start.catalog_index].item or {}
                    start.page:on_dirty(#start.items)
                    clickItem(recipe_index)
                end,
            })
        </script>
    </head>
    <body>
        <div class="item-container-region"  style="width:100%;  background-color: rgb(0,0,0); justify-content: center;" data-model="start">

            <!-- 物流物品选择 start -->
            <div class="panel" style= "flex-direction: column;">
                <div class="header" id = "item-name-block" data-event-click="clickClose()">
                    <button class = "back-button"/>
                    <div class = "menu-title" style="width: 70%;">选择物流物品</div>
                </div>

                <!-- tag page begin -->
                <div class="panel" style = "width: 100%; height: 70.00vmin;">
                    <page width = '85.33vmin' height = '66.00vmin' footerheight= '4.00vmin' row='5' col='7' />
                </div>
                <!-- tag page end -->

                <div class = "draw-separator" style="margin-bottom:0;"/>
                <div class = "tab-container" style="height: 10%;">
                    <workbutton data-for = "recipe_menu" data-event-click="clickCatalog(it_index)" data-style-background-color = "it_index + 1 == catalog_index ? 'rgb(0,176,80)' : 'rgb(246, 142, 14)'">
                        <div class="workbutton-bg" data-style-background-image = "it.icon" />
                        <div class="catalog-desc">{{it.group}}</div>
                    </workbutton>
                </div>
            </div>
            <!-- 物流物品选择 end -->


            <div class="recipe-panel" style="flex-direction: column; height:100%;" data-if="false">
                <!-- 物品基本信息 start -->
                <div class="item-info-block">
                    <div class = "name-block" style="height: 13%; width:100%; border: 1px #fff;">
                        <div class = "recipe-name-text" style="-webkit-text-stroke: 0.2vmin rgb(0, 112, 192); font-size: 5vmin;">{{recipe_name}}</div>
                    </div>
                    <div style="flex-direction:column; justify-content: flex-start; align-items: flex-start; width:100%;height:30%;">
                        <div class ="drone-title-block" style="height:5vmin;">
                            <div class = "drone-pic" style='background-image:"textures/science/book.texture";'/>
                            <div class = "drone-title">基本信息</div>
                        </div>
                        <div class="property-text" style="-webkit-text-stroke: 0.20vmin rgb(39, 32, 17);color: rgb(221, 235, 26); word-break:break-all; font-size: 3.5vmin;">一种用于抓取物品的机器爪一种用于抓取物品的机器爪</div>
                    </div>
                    <div class="row" style="width:100%; height:57%; justify-content: flex-start; align-items: center;">
                        <div class="info-block" style="margin-top:0; margin-left:1em; justify-content: center; align-items: flex-start">
                            <div class="row">
                                <div class="property-icon" style='background-image:"textures/character/timer.texture";'/>
                                <div class="property-text" style="color: rgb(0,176,240);">制造速度</div>
                                <div class="property-text" style="color:#fff;">2.0s(-1.75s)</div>
                            </div>
                            <div class="row">
                                <div class="property-icon" style='background-image:"textures/character/buffer.texture";'/>
                                <div class="property-text" style="color: rgb(0,176,240);">产能加成</div>
                                <div class="property-text" style="color:#fff;">40%</div>
                            </div>
                            <div class="row">
                                <div class="property-icon" style='background-image:"textures/character/health.texture";'/>
                                <div class="property-text" style="color: rgb(0,176,240);">建筑生命</div>
                                <div class="property-text" style="color:#fff;">200/990</div>
                            </div>
                            <div class="row">
                                <div class="property-icon" style='background-image:"textures/character/flash.texture";'/>
                                <div class="property-text" style="color: rgb(0,176,240);">建筑能耗</div>
                                <div class="property-text" style="color:#fff;">500kw(-250kw)</div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- 物品基本信息 end -->

                <!-- 物品生产建筑 start -->
                <div class="item-building-block" style="border:0.1vmin rgb(89, 73, 39);">
                    <div style="flex-direction:row; justify-content: flex-start; width:100%;height:20%;">
                        <div class ="drone-title-block" style="height:5vmin;">
                            <div class = "drone-pic" style='background-image:"textures/construct/assembler.texture";'/>
                            <div class = "drone-title">生产建筑</div>
                        </div>
                    </div>
                    <div style="flex-direction:row; justify-content: center; width:100%; padding-top:0.3em;height:80%; align-items: center;">
                        <div class="small-building"/>
                        <div class="small-building"/>
                        <div class="small-building"/>
                        <div class="small-building"/>
                        <div class="small-building"/>
                        <div class="small-building"/>
                        <div class="small-building"/>               
                    </div>
                </div> 
                <!-- 物品生产建筑 end -->
                
                <!-- 物品确认按钮 start -->
                <div class="item-button-block" style="border:0.1vmin rgb(89, 73, 39);">
                    <button class = "confirm-button" style="background-color:rgb(203, 118, 24); margin-bottom:0; width: 25vmin; height:10vmin;" data-event-click = "clickClose()">
                        <div class="middle-bg" style='background-image: "textures/road/forbidden.texture";'/>
                        <div class = "recipe-name-text" style="font-size: 3.73vmin;">取消</div>
                    </button>
                    <button class = "confirm-button" style="background-color:rgb(52, 207, 115); margin-bottom:0; width: 25vmin; height:10vmin;" data-event-click = "clickConfirm()">
                        <div class="middle-bg" style='background-image: "textures/construct/work.texture";'/>
                        <div class = "recipe-name-text" style="font-size: 3.73vmin;">确定</div>
                    </button> 
                </div>
                <!-- 物品确认按钮 end -->
            </div>
        </div>
    </body>
</rml>