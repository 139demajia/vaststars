<rml>
    <head>
        <style>
            .recipe-panel {
                background-color: rgb(44, 32, 18);
                border: 0.2vmin rgb(89, 73, 39);
                border-radius: 0.67vmin;
                margin:auto 0.3em;
                width: 25%;
                height: 90%;
                justify-content: space-evenly;
            }
            .recipe-name-block {
                background-color: rgb(203, 118, 24);
                width: 100%;
                height:5%;
                flex-direction: row;
                justify-content: space-between;
                align-items: center;
                border: 0.10vmin rgb(89, 73, 39);
            }
            .name-block {
                background-color: rgb(203, 118, 24);
                height:100%;
                flex-direction: row;
                justify-content: flex-start;
                align-items: center;
            }
            .recipe-change-block {
                width: 100%;
                height:40%;
                flex-direction: column;
                align-items: flex-start;
                border: 0.10vmin rgb(89, 73, 39);
                background-color: rgb(44, 32, 18);
            }
            .recipe-button-block {
                width: 100%;
                height:15%;
                flex-direction: row;
                align-items: flex-end;
                justify-content: space-evenly;
                background-color: rgb(44, 32, 18);
                font-size: 3.47vmin;
            }
            .recipe-name-text {
                padding-bottom: 1vmin;
                margin:0 0.5em 0 0;
                font-size: 3.73vmin;
                text-align: center;
                -webkit-text-stroke: 0.05em rgb(0,0,0);
            }
            .two-recipe-block {
                flex-direction: column;
                justify-content: space-evenly;
                align-items: center;
                background-color: rgb(44, 32, 18);
                font-size: 3.73vmin;
                background-size: cover;
                border-radius: 0.27vmin;
                width: 100%;
                height:80%;
            }
            .materials-block {
                flex-direction: column;
                justify-content: center;
                align-items: flex-start;
                background-size: cover;
                border-radius: 0.27vmin;
                width: 100%;
                height:80%;
            }
            .materials {
                flex-direction: row;
                justify-content: space-between;
                align-items: center;
                background-size: cover;
                width: 100%;
                height:15%;
            }
            .materials-item {
                flex-direction: row;
                justify-content: flex-start;
                align-items: center;
                width: 100%;
            }
            .materials-icon {
                margin-left: 0.5em;
                width: 3.67vmin;
                height: 3.67vmin;
                background-color: rgb(250, 205, 9);;
                flex-direction: row;
                justify-content: flex-start;
                align-items: center;
                background-size: cover;
            }
            .materials-name {
                padding-bottom: 0.3em;
                padding-left: 0.2em;
                padding-right:1em;
                font-size: 3.73vmin;
                text-align: center;
            }
            .materials-num {
                padding-bottom: 0.3em;
                padding-right:1em;
                font-size: 3.73vmin;
                text-align: center;
            }
            .new-coming {
                position: absolute; 
                right:0.5vmin; bottom:0; 
                font-size:4vmin; 
                color:rgb(0, 255, 21); 
                -webkit-text-stroke: 1px #000;
            }
            .button-increase-item {
                background-color: rgb(19,175,240);
                background-size:cover;
            }
        </style>
        <style path = "common/building_style.rcss"/>
        <style path = "common/listpage_style.rcss"/>
        <script type="text/x-lua" >
            local ui_sys = require "ui_system"

            local start = ui_sys.createDataMode("start", {
                category_index = 1,
                recipe_index = 1,
                recipe_category = {},
                recipe_items = {},
                recipe_name = " ",
                recipe_ingredients = {},
                manual_item_count = 0,
                manual_recipe_main_output_name = " ",
                manual_recipe_main_output_icon = "none",
                enabled_item_count_5 = false,
                enabled_item_count_1 = false,
                enabled_start_manual = false,
                main_output_enough = false,
            })

            function start.clickClose(event)
                ui_sys.close()
            end

            local select_item
            function start.clickCatalog(event, it_index)
                ui_sys.pub {"click_category", it_index + 1}
            end

            function start.clickStartManual(event)
                if start.recipe_name == " " then
                    console.log("found no select item")
                    return
                end
                if start.manual_item_count <= 0 then
                    console.log("item count <= 0")
                    return
                end
                ui_sys.pub {"manual_add", start.recipe_name, start.manual_item_count}
                ui_sys.close()
                ui_sys.close("cmdcenter.rml")
            end

            local enabled_item_count <const> = {
                [1] = "enabled_item_count_1",
                [5] = "enabled_item_count_5",
            }
            function start.clickItemCountPreTime(event, count)
                if start[enabled_item_count[count]] == false then
                    return
                end
                ui_sys.pub {"manual_item_count", math.floor(start.manual_item_count + count)}
            end

            function start.clickRevertItemCount(event)
                ui_sys.pub {"revert_item_count"}
            end

            function start.clickManualQueue(event)
                ui_sys.open("manual_queue.rml")
            end
            -- <!-- tag page begin -->
            local function clickItem(index)
                local item = start.recipe_items[index]
                if not item then
                    console.log(("no item found at index %d"):format(index))
                    return
                end
                ui_sys.pub {"click_recipe", item.name, index}
            end

            local function page_item_renderer(index)
                if index > #start.recipe_items then
                    local e = document.createElement "div"
                    e.outerHTML = [[<div style = "width: 12.00vmin; height: 12.00vmin;" />]]
                    return e
                end

                local item = document.createElement "div"
                item.outerHTML = ([[<div class = "item" style = "backgroundImage: %s" ><p class = "new-coming" data-if="%s">新</p></div>]]):format(start.recipe_items[index].icon, start.recipe_items[index].new)
                local select_style_border = "5px green"

                if start.recipe_index == index then
                    select_item = item
                    item.style.border = select_style_border
                end

                item.addEventListener('click', function(event)
                    if select_item then
                        select_item.style.border = '0px green'
                    end
                    item.style.border = select_style_border
                    clickItem(index)
                    select_item = item
                end)
                return item
            end

            local pageclass = require "page"
            window.customElements.define("page", function(e)
                start.page = pageclass.create(document, e, page_item_renderer)
            end)
            -- <!-- tag page end -->

            ui_sys.mapping(start, {
                {
                    "recipe_items",
                    function()
                        select_item = nil
                        start.page:on_dirty_all(#start.recipe_items)
                    end
                },
                {
                    "recipe_ingredients",
                    function()
                        local t = {
                            can_craft = 'rgb(176,124,52)',
                            lack = 'rgb(255,0,0)',
                            enough = 'rgb(255, 255, 255)',
                        }
                        for i = 1, #start.recipe_ingredients do
                            local shortages = start.recipe_ingredients[i].shortages
                            start.recipe_ingredients[i].shortages = assert(t[shortages])
                        end
                    end
                }
            })
        </script>
    </head>
    <body>
        <div class="item-container-region"  style="width:100%;  background-color: rgb(0,0,0); justify-content: center;" data-model="start">
            <div class="panel" style= "flex-direction: column;">
                <div class="header" id = "item-name-block">
                    <button class = "back-button" data-event-click="clickClose()" />
                    <div class = "menu-title" style="width: 70%;">选择生产物品</div>
                    <button class = "find-button" style="position:absolute; right:0;" data-event-click="clickManualQueue()"/>
                </div>

                <!-- tag page begin -->
                <div class="panel" style = "width: 100%; height: 70.00vmin;">
                    <page width = '85.33vmin' height = '66.00vmin' footerheight= '4.00vmin' row='5' col='7' />
                </div>
                <!-- tag page end -->

                <div class = "draw-line"/>

                <div class = "tab-container" style="flex-grow: 1;">
                    <div data-for = "recipe_category" style = "justify-content: center; align-items: center; flex-basis: 30%; height: 48%;">
                        <workbutton data-event-click="clickCatalog(it_index)" data-style-background-color = "it_index + 1 == category_index ? 'rgb(0,176,80)' : 'rgb(246, 142, 14)'" style = "width: 100%;">
                            <div class="workbutton-bg" data-style-background-image="it.icon" />
                            <div class="catalog-desc">{{it.group}}</div>
                            <p class="new-coming" data-if="it.new">新</p>
                        </workbutton>
                    </div>
                </div>

            </div>
            <div class="recipe-panel" style = "flex-direction: column; height: 100%;">
                <!-- 标题栏 -->
                <div class = "recipe-name-block">
                    <div class = "name-block">
                        <div class = "small-bg" style='background-image: "textures/science/book.texture";'/>
                        <div class = "recipe-name-text" style="-webkit-text-stroke: 0.2vmin rgb(0, 112, 192);">{{recipe_name}}</div>
                    </div>
                </div>

                <!-- 物品所需原料 start -->
                <div class = "recipe-change-block">
                    <div class = "pic-block" style="width: 32%; height:12%;">
                        <div class = "small-bg" style='background-image: "textures/road_net/big_bag.texture";'/>
                        <div class = "recipe-name-text">原料</div>
                    </div>
                    <div class = "materials-block"> 
                        <div class = "materials" data-for = "recipe_ingredients">
                            <div class = "materials-item">
                                <div class = "materials-icon" data-style-background-image = "it.icon" />
                                <div class = "materials-name">{{it.name}}</div>
                                <div style = "flex-grow: 1; flex-direction:row-reverse;">
                                    <div class = "materials-num" data-style-color = "it.shortages">X{{it.count}}</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- 物品所需原料 end -->

                <!-- 物品生产数量 start -->
                <div class = "recipe-change-block">
                    <div class = "pic-block" style="width: 32%; height:12%;">
                        <div class = "small-bg" style='background-image: "textures/science/whitebox.texture";'/>
                        <div class = "recipe-name-text">物品</div>
                    </div> 
                    <div class = "materials-block" style="height:58%;">
                        <div class = "materials" data-if = "manual_recipe_main_output_name != ' '">
                            <div class = "materials-item">
                                <div class = "materials-icon" data-style-background-image="manual_recipe_main_output_icon"/>
                                <div class = "materials-name">{{manual_recipe_main_output_name}}</div>
                                <div style = "flex-grow: 1; flex-direction:row-reverse;">
                                    <div class = "materials-num" data-style-color="main_output_enough ? 'rgb(255, 255, 255)' : 'rgb(255, 0, 0)'">X{{manual_item_count}}</div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row" style="height: 30%; width:100%; justify-content: space-evenly;">
                        <button class = "button-increase-item" style='background-image:"textures/factory/return.texture";background-color: rgb(255, 230, 0);' data-event-click = "clickRevertItemCount()"/>
                        <button class = "button-increase-item" style='background-image:"textures/factory/plus-five.texture";' data-style-background-color="enabled_item_count_5 ? 'rgb(19, 175, 240)' : 'rgb(108, 108, 108)'" data-event-click = "clickItemCountPreTime(5)" />
                        <button class = "button-increase-item" style='background-image:"textures/factory/plus-one.texture";'  data-style-background-color="enabled_item_count_1 ? 'rgb(19, 175, 240)' : 'rgb(108, 108, 108)'" data-event-click = "clickItemCountPreTime(1)" />
                    </div>
                </div>
                <!-- 物品生产数量 end -->

                <!-- 开始生产按钮 start -->
                <div class = "recipe-button-block">
                    <button class = "confirm-button" style="background-color:rgb(52, 207, 115); height: 12vmin;" data-event-click = "clickStartManual()" data-if = "recipe_name != ' '" data-style-background-color="enabled_start_manual ? 'rgb(52, 207, 115)' : 'rgb(108, 108, 108)'">
                        <div class = "recipe-name-text" style="font-size: 5vmin; margin:0; padding-bottom: 1vmin;">开始生产</div>
                    </button>
                </div>
                <!-- 开始生产按钮 end -->
            </div>
        </div>
    </body>
</rml>