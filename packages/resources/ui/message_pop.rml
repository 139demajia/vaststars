<rml>
    <head>
        <style>
            .warning-panel {
                background-color: rgb(44, 32, 18);
                border: 0.2vmin rgb(89, 73, 39);
                border-radius: 0.67vmin;
                margin:auto 0.3em;
                width: 35%;
                height: 11%;
                justify-content: space-evenly;
                flex-direction: row;
                animation: 3s cubic-out 0s slideup;
            }
            .warning-message {
                width: 95%;
                height: 100%;
                font-size: 4vmin;
                text-align: left;
                word-break: break-all;
            }
            .warning-icon {
                position: absolute;
                left: -1vmin;
                top:-3vmin;
                width: 2.8vmin;
                height: 7.6vmin;
                background-size: cover;
                background-image: "textures/common/exclamation2.texture";
            }
            .item-collect-panel {
                border-radius: 0.67vmin;
                margin:auto 0.3em;
                width: 35%;
                height: 11%;
                flex-direction: row;
                justify-content: center;
                align-items: center;
                animation: 3s cubic-out 0s slideup;
            }
            .materials-block {
                flex-direction: row;
                justify-content: flex-start;
                align-items: center;
                background-size: cover;
                border-radius: 0.27vmin;
                width: 100%;
                height:100%;
                flex-wrap: wrap;
            }
            .materials {
                flex-direction: row;
                align-items: center;
                background-size: cover;
            }
            .materials-item {
                flex-direction: row;
                justify-content: flex-start;
                align-items: center;
            }
            .materials-icon {
                width: 3.67vmin;
                height: 3.67vmin;
                background-color: rgb(250, 205, 9);;
                flex-direction: row;
                justify-content: flex-start;
                align-items: center;
                background-size: cover;
                background-image: "textures/construct/chemistry1.texture";
            }
            .materials-name {
                padding-bottom: 0.3em;
                padding-left: 0.2em;
                padding-right:0.2em;
                font-size: 3.73vmin;
                text-align: center;
            }
            .materials-num {
                padding-bottom: 0.3em;
                padding-right:1em;
                font-size: 3.73vmin;
                text-align: left;
                color: rgb(79, 250, 0);
            }
            @keyframes slideup {
                from {
                     margin-bottom: 30%; 
                     opacity: 1;
                }
                to   { 
                    margin-bottom: 45%; 
                    opacity: 0;
                }
            }
        </style>
        <style path = "common/building_style.rcss"/>
        <style path = "common/listpage_style.rcss"/>
        <script type="text/x-lua" >
            local ui_sys = require "ui_system"
            local start = ui_sys.createDataMode("start", {
                object_id = 0,
                recipe_index = 1,
                recipe_name = "",
                recipe_menu = {},
                catalog_index = 1,
                items = {},

                recipe_time = " ",
                recipe_ingredients = {},
                recipe_results = {},
            })

            local function clickItem(index)
            end

            function start.clickClose(event)
                ui_sys.close()
            end

            function start.clickConfirm(event)
                ui_sys.pub {"set_recipe", start.object_id, start.recipe_name}
                ui_sys.close()
            end

            local select_item
            function start.clickCatalog(event, it_index)
                start.catalog_index = it_index + 1
                start.items = start.recipe_menu[it_index + 1].item
                -- <!-- tag page begin -->
                select_item = nil
                start.page:on_dirty_all(#start.items)
                -- <!-- tag page end -->
            end

            -- <!-- tag page begin -->
            local function page_item_renderer(index)
                if index > #start.items then
                    local e = document.createElement "div"
                    e.outerHTML = [[<div style = "width: 12.00vmin; height: 12.00vmin;" />]]
                    return e
                end

                local item = document.createElement "div"
                item.outerHTML = ([[<div class = "item" style = "backgroundImage: %s" />]]):format(start.items[index].icon)
                local select_style_border = "5px green"

                if start.recipe_name == start.items[index].name then
                    select_item = item
                    item.style.border = select_style_border
                end

                item.addEventListener('click', function(event)
                    if select_item then
                        select_item.style.border = '0px green'
                    end
                    item.style.border = select_style_border
                    clickItem(index)
                    select_item = item
                end)
                return item
            end

            local pageclass = require "page"
            window.customElements.define("page", function(e)
                start.page = pageclass.create(document, e, page_item_renderer)
            end)
            -- <!-- tag page end -->

        </script>
    </head>
    <body>
        <div class="item-container-region"  style="width:100%;  background-color: rgb(0,0,0); justify-content: center;" data-model="start">
            <!-- 警告上漂框 -->
            <div class="warning-panel" data-if="true">
                <div class="warning-icon"/>
                <div class="warning-message">指挥中心空间不足请及时清理指挥中心空间不足请及时清理指挥中心</div>
            </div>

            <!-- 物品获得上漂框 -->
            <div class="item-collect-panel" data-if="false">
                <div class = "materials">
                    <div class = "materials-item">
                        <div class = "materials-icon"/>
                        <div class = "materials-name">组装机</div>
                    </div>
                    <div class = "materials-num">X3</div>
                </div>
            </div>
        </div>
    </body>
</rml>