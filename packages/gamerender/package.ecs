import "@ant.objcontroller"
import "@ant.rmlui"
import "@ant.sky"
import "@ant.animation"
import "@ant.terrain"
import "@vaststars.utility"
import "@vaststars.input"
import "@vaststars.ui"

pipeline "init"
    .stage "init"
    .stage "post_init"

pipeline "exit"
    .stage "exit"

pipeline "update"
    .stage "timer"
    .stage "start_frame"
    .stage "data_changed"
    .stage  "widget"
    .pipeline "sky"
    .pipeline "scene"
    .pipeline "camera"
    .pipeline "collider"
    .pipeline "animation"
    .pipeline "render"
    .pipeline "select"
    .pipeline "pickup_mapping"
    .pipeline "ui"
    .stage "end_frame"
    .stage "final"

pipeline "ui"
    .stage "ui_start"
    .stage "ui_update"
    .stage "ui_end"

pipeline "pickup_mapping"
    .stage "after_pickup_mapping"

------------------------
component "x" .type "lua"
component "y" .type "lua"
component "dir" .type "lua"

------------------------
component "gameplay_world" .type "lua"
component "gameplay_road_entities" .type "lua"
policy "gameplay_adapter"
    .component "gameplay_world"
    .component "gameplay_road_entities"

component "pipe_types" .type "lua" -- = {[x][y] = pipe_type, ...}
component "pipe_entities" .type "lua" -- = {[x][y] = pipe_entity, ...}
policy "pipe_data"
    .component "pipe_types"
    .component "pipe_entities"

component "road_types" .type "lua" -- = {[x][y] = {type = xx, dir = xx}, ...}
component "road_entities" .type "lua" -- = {[x][y] = road_entity, ...}
policy "road_data"
    .component "road_types"
    .component "road_entities"

component "route_max_id" .type "lua"
component "route_endpoints" .type "lua" -- {[scene_id] = e, ...}
component "routes" .type "lua" -- {[id] = {scene_id, scene_id}, ...}
policy "route_data"
    .component "route_max_id"
    .component "route_endpoints"
    .component "routes"

component "terrain"
    .type "lua"

policy "terrain"
    .component "terrain"

------------------------
system "init_system"
    .require_interface "ant.objcontroller|iobj_motion"
    .require_interface "ant.rmlui|irmlui"
    .require_interface "vaststars.ui|iui"
    .require_policy "ant.sky|skybox"
    .require_system "vaststars.input|drapdrop_system"
    .require_system "vaststars.gamerender|camera_controller_system"
    .require_system "vaststars.gamerender|debug_system"
    .require_system "vaststars.gamerender|game_object_system"
    .require_system "vaststars.gamerender|pipe_system"
    .require_system "vaststars.gamerender|gameplay_adapter_system"
    .implement "init_system.lua"
    .method "init_world"

system "gameplay_adapter_system"
    .implement "gameplay_adapter_system.lua"
    .method "init_world"
    .method "data_changed"

interface "igameplay_adapter"
    .implement "gameplay_adapter_system.lua"
    .method "set_road"

system "camera_controller_system"
    .implement "camera.lua"
    .require_interface "ant.objcontroller|iobj_motion"
    .require_interface "ant.camera|icamera"
    .method "init_world"
    .method "data_changed"

system "debug_system"
    .implement "debug_system.lua"
    .method "ui_update"
    .method "start_frame"

interface "icamera_controller"
    .implement "camera.lua"
    .method "attach"
    .method "camera"
--
component "prefab_slot_cache" .type "lua"
component "prefab_slot_attach" .type "lua"
component "game_object"
policy "game_object"
    .component "game_object"
    .component_opt "prefab_slot_cache"
    .component_opt "prefab_slot_attach"

system "game_object_system"
    .implement "game_object_system.lua"
    .method "entity_remove"
    .method "entity_ready"

system "prefab_object_system"
    .implement "iprefab_object.lua"
    .method "component_init"

interface "igame_object"
    .implement "game_object_system.lua"
    .method "create"
    .method "get_prefab_object"
    .method "get_game_object"
    .method "remove_prefab"

interface "iprefab_object"
    .implement "iprefab_object.lua"
    .method "create"
    .method "slot_attach"
    .method "slot_detach"
    .method "has_tag"

interface "iconstruct_arrow"
    .implement "iconstruct_arrow.lua"
    .method "show"
    .method "hide"

system "pipe_system"
    .implement "pipe_system.lua"
    .method "init_world"
    .method "after_pickup_mapping"
    .method "ui_update"

--
component "debug_component" .type "lua"
component "inserter" -- 机器爪
component "stop_ani_during_init" -- 开始时暂停动画显示
component "set_road_entry_during_init" -- 开始时设置入口
component "pickup_show_set_road_arrow" .type "lua" -- 点击显示建路箭头 {tile_coord, arrow_tile_coord}
component "pickup_set_road" .type "lua" -- 点击建路 {tile_coord, arrow_tile_coord}
component "pickup_show_ui" .type "lua" -- 点击显示 ui {url}
component "pickup_show_set_pipe_arrow" .type "lua" -- 点击显示建水管箭头
component "pickup_set_pipe" .type "lua" -- 点击建水管 {tile_coord, arrow_tile_coord}
component "route_endpoint" -- 路线终端(用于路线的起点或终点)
component "named" -- 需要命名
component "pickup_show_remove" .type "lua" -- 删除建筑

component "construct_arrows" .type "lua" -- 缓存箭头,
component "construct_arrows_building_type" .type "lua" -- 点击箭头时的建筑类型
policy "construct_arrows"
    .component "construct_arrows"
    .component "construct_arrows_building_type"

interface "ipipe"
    .implement "pipe_system.lua"
    .method "construct"
    .method "destruct"

component "construct_entity" .type "lua"
policy "construct_entity"
    .component "construct_entity"

system "construct_system"
    .implement "construct_system.lua"
    .require_system "ant.animation|animation_system"
    .require_system "ant.animation|animation_birth"
    .require_system "ant.animation|skinning_system"
    .require_system "ant.animation|mesh_skinning"
    .require_system "ant.asset|meshskin_system"
    .require_system "ant.terrain|shape_terrain_system"
    .method "entity_init"
    .method "data_changed"
    .method "camera_usage"
    .method "after_pickup_mapping"

interface "iconstruct"
    .implement "construct_system.lua"
    .method "init"

    system "road_system"
    .require_system "route_system"
    .implement "road_system.lua"
    .method "init_world"
    .method "after_pickup_mapping"
    .method "ui_update"

interface "iroad"
    .implement "road_system.lua"
    .method "construct"
    .method "destruct"
    .method "get_road_type"
    .method "set_building_entry"

system "route_system"
    .implement "route_system.lua"
    .method "init_world"
    .method "entity_init"
    .method "entity_remove"
    .method "data_changed"

component "building"
    .type "lua"

policy "building"
    .component "building"

interface "iterrain"
    .implement "iterrain.lua"
    .require_system "ant.terrain|terrain_road_system"
    .method "create"
    .method "get_coord_by_position"
    .method "get_position_by_coord"
    .method "get_begin_position_by_coord"
    .method "get_tile_centre_position"
    .method "get_tile_building_type"
    .method "set_tile_building_type"
    .method "get_confirm_ui_position"
