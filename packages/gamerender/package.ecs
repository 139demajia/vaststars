import "@ant.audio"
import "@ant.objcontroller"
import "@ant.rmlui"
import "@ant.sky"
import "@ant.animation"
import "@ant.camera"
import "@ant.efk"
import "@ant.modifier"

pipeline "init"
    .stage "init"
    .stage "post_init"

pipeline "exit"
    .stage "exit"

pipeline "update"
    .stage "timer"
    .stage "start_frame"
    .stage "data_changed"
    .stage  "widget"
    .pipeline "sky"
    .pipeline "animation"
    .pipeline "scene"
    .pipeline "camera"
    .pipeline "collider"
    .pipeline "render"
    .pipeline "select"
    .pipeline "pickup_mapping"
    .pipeline "ui"
    .stage "end_frame"
    .stage "final"

pipeline "ui"
    .stage "ui_start"
    .stage "ui_update"
    .stage "ui_end"

pipeline "pickup_mapping"
    .stage "pickup_mapping"

policy "animation"
    .require_system "ant.animation|animation_system"

----------------------------------------------------
----------------------------------------------------
system "init_system"
    .require_interface "ant.objcontroller|iobj_motion"
    .require_interface "ant.rmlui|irmlui"
    .require_policy "ant.sky|skybox"
    .require_policy "ant.render|csm_queue"
    .require_policy "ant.render|skinrender"
    .require_policy "vaststars.gamerender|animation"
    .require_system "ant.modifier|modifier_system"
    .require_system "ant.animation|motion_system"
    .require_system "ant.animation|slot_system"
    .require_system "vaststars.gamerender|single_touch_system"
    .require_system "vaststars.gamerender|dragdrop_camera_system"
    .require_system "vaststars.gamerender|touch_simulate_system"
    .require_system "vaststars.gamerender|gesture_simulate_system"
    .require_system "vaststars.gamerender|entity_object_system"
    .require_system "vaststars.gamerender|pickup_detect_system"
    .require_system "vaststars.gamerender|debug_system"
    .implement "init_system.lua"
    .method "init_world"
    .method "update_world"
    .method "camera_usage"

system "ui_system"
    .implement "engine/system/ui_system.lua"
    .method "ui_update"
    .method "camera_usage"

interface "iui"
    .implement "engine/system/ui_system.lua"
    .method "open"
    .method "close"
    .method "update"
    .method "preload_datamodel_dir"
    .method "add_datamodel_listener"
    .method "set_guide_progress"

system "dragdrop_camera_system"
    .implement "engine/system/dragdrop_camera_system.lua"
    .method "camera_usage"

system "touch_simulate_system"
    .implement "engine/system/touch_simulate_system.lua"
    .method "data_changed"

system "gesture_simulate_system"
    .implement "engine/system/gesture_simulate_system.lua"
    .method "data_changed"

system "pickup_detect_system"
    .implement "engine/system/pickup_detect_system.lua"
    .method "data_changed"

system "pickup_mapping_system"
    .implement "engine/system/pickup_mapping_system.lua"
    .method "entity_remove"
    .method "after_pickup"

interface "ipickup_mapping"
    .implement "engine/system/pickup_mapping_system.lua"
    .method "mapping"
    .method "unmapping"

system "entity_object_system"
    .implement "engine/system/entity_object_system.lua"
    .method "entity_ready"

interface "ientity_object"
    .implement "engine/system/entity_object_system.lua"
    .method "create"

system "single_touch_system"
    .implement "engine/system/single_touch_system.lua"
    .method "data_changed"

----------------------------------------------------
----------------------------------------------------
system "debug_system"
    .implement "debug_system.lua"
    .method "ui_update"

interface "idetail"
    .implement "detail_system.lua"
    .method "show"
