import "@ant.objcontroller"
import "@ant.rmlui"
import "@ant.sky"
import "@ant.animation"
import "@ant.camera"
import "@ant.efk"
import "@ant.modifier"
import "@ant.terrain"
import "@mod.terrain"
import "@ant.motion_sampler"
import "@mod.printer"
import "@mod.stonemountain"
import "@mod.translucent_plane"
import "@ant.daynight"
import "@mod.billboard"

pipeline "init"
    .stage "init"
    .stage "post_init"

pipeline "exit"
    .stage "exit"

pipeline "update"
    .stage "timer"
    .stage "start_frame"
    .stage "data_changed"
    .stage  "widget"
    .pipeline "sky"
    .pipeline "animation"
    .pipeline "motion_sample"
    .pipeline "scene"
    .pipeline "camera"
    .pipeline "collider"
    .pipeline "render"
    .pipeline "select"
    .pipeline "ui"
    .pipeline "gameworld"
    .stage "end_frame"
    .stage "final"

pipeline "ui"
    .stage "ui_start"
    .stage "ui_update"
    .stage "ui_end"

pipeline "gameworld"
    .stage "gameplay_update"
    .stage "gameworld_start"
    .stage "gameworld_update"
    .stage "gameworld_end"

pipeline "gameworld_build"
    .stage "gameworld_prebuild"
    .stage "gameworld_build"

pipeline "gameworld_clean"
    .stage "gameworld_clean"

pipeline "prototype"
    .stage "prototype_restore"

----------------------------------------------------
----------------------------------------------------
policy "engine"
    .require_interface "ant.objcontroller|iobj_motion"
    .require_interface "ant.rmlui|irmlui"
    .require_policy "ant.sky|skybox"
    .require_policy "ant.render|csm_queue"
    .require_policy "ant.render|skinrender"
    .require_policy "ant.motion_sampler|motion_sampler"
    .require_policy "ant.daynight|daynight"
    .require_system "ant.modifier|modifier_system"
    .require_system "ant.animation|animation_system"
    .require_system "ant.animation|motion_system"
    .require_system "ant.animation|slot_system"
    .require_system "ant.render|outline_system"
    .require_system "ant.render|draw_indirect_system"
    .require_policy "ant.render|indirect"
    .require_policy "ant.render|draw_indirect"
    .require_policy "ant.render|outline_info"

policy "mod"
    .require_system "mod.translucent_plane|init_system"
    .require_system "mod.billboard|billboard_system"
    .require_system "mod.terrain|terrain_system"

policy "engine_utils"
    .require_system "camera_controller"
    .require_system "entity_object_system"
    .require_system "debug_system"
    .require_system "update_system"

policy "render_updates"
    .require_system "assembling_system"
    .require_system "daynight_system"
    .require_system "building_system"
    .require_system "inventory_system"
    .require_system "drone_system"
    .require_system "drone_depot_systme"
    .require_system "work_state_system"
    .require_system "task_system"
    .require_system "storage_tank_system"
    .require_system "statistic_system"
    .require_system "station_system"
    .require_system "guide_system"
    .require_system "science_system"
    .require_system "lorry_system"
    .require_system "fluidbox_system"
    .require_system "road_system"
    .require_system "chimney_system"

----------------------------------------------------
----------------------------------------------------
system "init_system"
    .require_policy "engine"
    .require_policy "engine_utils"
    .require_policy "render_updates"
    .require_policy "mod"
    .implement "init_system.lua"
    .method "init_world"
    .method "gameplay_update"
    .method "gameworld_end"
    .method "camera_usage"

----------------------------------------------------
----------------------------------------------------
-- engine_utils
system "ui_system"
    .implement "engine/system/ui_system.lua"
    .method "ui_update"
    .method "camera_usage"

interface "iui"
    .implement "engine/system/ui_system.lua"
    .method "open"
    .method "close"
    .method "call_datamodel_method"
    .method "send"
    .method "add_datamodel_listener"
    .method "set_guide_progress"
    .method "convert_coord"
    .method "redirect"
    .method "is_open"
    .method "broadcast"

system "camera_controller"
    .implement "engine/system/camera_controller.lua"
    .method "camera_usage"

interface "icamera_controller"
    .implement "engine/system/camera_controller.lua"
    .method "screen_to_world"
    .method "world_to_screen"
    .method "get_central_position"
    .method "focus_on_position"
    .method "set_camera_from_prefab"
    .method "toggle_view"
    .method "set_camera_srt"

system "entity_object_system"
    .implement "engine/system/entity_object_system.lua"
    .method "scene_update"

interface "ientity_object"
    .implement "engine/system/entity_object_system.lua"
    .method "create"

system "debug_system"
    .implement "debug_system.lua"
    .method "init_world"
    .method "ui_update"

system "update_system"
    .implement "update_system.lua"
    .method "data_changed"

interface "iupdate"
    .implement "update_system.lua"
    .method "add"

interface "idetail"
    .implement "detail_system.lua"
    .method "show"
    .method "focus"
    .method "selected"
    .method "unselected"

interface "igame_object"
    .implement "engine/game_object.lua"
    .method "create"

interface "igameplay"
    .implement "gameplay_system.lua"
    .method "dirty"
    .method "create_entity"
    .method "remove_entity"
    .method "update_chimney_recipe"

system "pick_object_sys"
    .implement "pick_object_system.lua"
    .method "update_world"

interface "ipick_object"
    .implement "pick_object_system.lua"
    .method "blur_pick"
----------------------------------------------------
----------------------------------------------------
-- render_updates
system "assembling_system"
    .implement "render_updates/assembling.lua"
    .method "gameworld_prebuild"
    .method "gameworld_build"
    .method "gameworld_update"

system "daynight_system"
    .implement "render_updates/daynight.lua"
    .method "gameworld_update"

system "building_system"
    .implement "render_updates/building.lua"
    .method "gameworld_update"
    .method "gameworld_build"

interface "ibuilding"
    .implement "render_updates/building.lua"
    .method "get"
    .method "remove"
    .method "set"

system "inventory_system"
    .implement "render_updates/inventory.lua"
    .method "gameworld_update"

system "drone_system"
    .implement "render_updates/drone.lua"
    .method "gameworld_update"
    .method "gameworld_clean"

system "drone_depot_systme"
    .implement "render_updates/drone_depot.lua"
    .method "gameworld_update"

system "work_state_system"
    .implement "render_updates/work_state.lua"
    .method "gameworld_update"

system "task_system"
    .implement "render_updates/task.lua"
    .method "gameworld_update"

system "storage_tank_system"
    .implement "render_updates/storage_tank.lua"
    .method "gameworld_build"

system "statistic_system"
    .implement "render_updates/statistic.lua"
    .method "gameworld_update"

system "station_system"
    .implement "render_updates/station.lua"
    .method "gameworld_update"

system "guide_system"
    .implement "render_updates/guide.lua"
    .method "gameworld_update"

system "science_system"
    .implement "render_updates/science.lua"
    .method "gameworld_update"

system "lorry_system"
    .implement "render_updates/lorry.lua"
    .method "prototype_restore"
    .method "gameworld_update"
    .method "gameworld_clean"

interface "ilorry"
    .implement "render_updates/lorry.lua"
    .method "get"

system "fluidbox_system"
    .implement "render_updates/fluidbox.lua"
    .method "gameworld_update"

system "ing_res_motion_system"
    .implement "render_updates/ing_res_motion.lua"
    .method "gameworld_update"
    .method "gameworld_clean"

interface "iing_res_motion"
    .implement "render_updates/ing_res_motion.lua"
    .method "create"

system "road_system"
    .implement "render_updates/road.lua"
    .method "gameworld_build"

system "chimney_system"
    .implement "render_updates/chimney.lua"
    .method "gameworld_build"