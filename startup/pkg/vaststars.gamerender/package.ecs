import "@ant.audio"
import "@ant.objcontroller"
import "@ant.rmlui"
import "@ant.sky"
import "@ant.animation"
import "@ant.camera"
import "@ant.efk"
import "@ant.modifier"
import "@ant.terrain"
import "@mod.terrain"
import "@ant.motion_sampler"
import "@mod.printer"
import "@mod.stonemountain"
import "@mod.translucent_plane"
import "@ant.daynight"
import "@mod.billboard"

pipeline "init"
    .stage "init"
    .stage "post_init"

pipeline "exit"
    .stage "exit"

pipeline "update"
    .stage "timer"
    .stage "start_frame"
    .stage "data_changed"
    .stage  "widget"
    .pipeline "sky"
    .pipeline "animation"
    .pipeline "motion_sample"
    .pipeline "scene"
    .pipeline "camera"
    .pipeline "collider"
    .pipeline "render"
    .pipeline "select"
    .pipeline "pickup_mapping"
    .pipeline "ui"
    .stage "end_frame"
    .stage "final"

pipeline "ui"
    .stage "ui_start"
    .stage "ui_update"
    .stage "ui_end"

pipeline "pickup_mapping"
    .stage "pickup_mapping"

policy "animation"
    .require_system "ant.animation|animation_system"

----------------------------------------------------
----------------------------------------------------
system "init_system"
    .require_interface "ant.objcontroller|iobj_motion"
    .require_interface "ant.rmlui|irmlui"
    .require_policy "ant.sky|skybox"
    .require_system "ant.audio|audio_system"
    .require_policy "ant.render|csm_queue"
    .require_policy "ant.render|skinrender"
    .require_policy "vaststars.gamerender|animation"
    .require_policy "ant.motion_sampler|motion_sampler"
    .require_policy "ant.daynight|daynight"
    .require_system "ant.modifier|modifier_system"
    .require_system "ant.animation|motion_system"
    .require_system "ant.animation|slot_system"
    .require_system "mod.terrain|terrain_system"
    .require_system "vaststars.gamerender|camera_controller"
    .require_system "vaststars.gamerender|input_simulate_system"
    .require_system "vaststars.gamerender|entity_object_system"
    .require_system "vaststars.gamerender|pickup_detect_system"
    .require_system "vaststars.gamerender|debug_system"
    .require_system "vaststars.gamerender|update_system"
    .require_system "ant.render|indirect_system"
    .require_system "mod.translucent_plane|init_system"
    .require_system "mod.billboard|billboard_system"
    -- render_updates begin
    .require_system "vaststars.gamerender|assembling_system"
    .require_system "vaststars.gamerender|daynight_system"
    .require_system "vaststars.gamerender|building_system"
    .require_system "vaststars.gamerender|inventory_system"
    .require_system "vaststars.gamerender|drone_system"
    .require_system "vaststars.gamerender|drone_depot_systme"
    .require_system "vaststars.gamerender|work_state_system"
    .require_system "vaststars.gamerender|task_system"
    .require_system "vaststars.gamerender|storage_tank_system"
    .require_system "vaststars.gamerender|statistic_system"
    .require_system "vaststars.gamerender|station_system"
    .require_system "vaststars.gamerender|guide_system"
    .require_system "vaststars.gamerender|science_system"
    .require_system "vaststars.gamerender|lorry_system"
    .require_system "vaststars.gamerender|fluidbox_system"
    -- render_updates end
    .implement "init_system.lua"
    .method "init_world"
    .method "update_world"
    .method "camera_usage"
    .method "end_frame"

system "ui_system"
    .implement "engine/system/ui_system.lua"
    .method "ui_update"
    .method "camera_usage"

interface "iui"
    .implement "engine/system/ui_system.lua"
    .method "open"
    .method "close"
    .method "call_datamodel_method"
    .method "send"
    .method "add_datamodel_listener"
    .method "set_guide_progress"
    .method "convert_coord"
    .method "redirect"
    .method "is_open"
    .method "broadcast"

system "camera_controller"
    .implement "engine/system/camera_controller.lua"
    .method "camera_usage"

interface "icamera_controller"
    .implement "engine/system/camera_controller.lua"
    .method "screen_to_world"
    .method "world_to_screen"
    .method "get_central_position"
    .method "focus_on_position"
    .method "set_camera_from_prefab"
    .method "toggle_view"

system "input_simulate_system"
    .implement "engine/system/input_simulate_system.lua"
    .method "data_changed"

system "pickup_detect_system"
    .implement "engine/system/pickup_detect_system.lua"
    .method "data_changed"

system "pickup_mapping_system"
    .implement "engine/system/pickup_mapping_system.lua"
    .method "entity_remove"
    .method "after_pickup"

interface "ipickup_mapping"
    .implement "engine/system/pickup_mapping_system.lua"
    .method "mapping"
    .method "unmapping"

system "entity_object_system"
    .implement "engine/system/entity_object_system.lua"
    .method "scene_update"

interface "ientity_object"
    .implement "engine/system/entity_object_system.lua"
    .method "create"

----------------------------------------------------
----------------------------------------------------
system "debug_system"
    .implement "debug_system.lua"
    .method "ui_update"

system "update_system"
    .implement "update_system.lua"
    .method "data_changed"

interface "iupdate"
    .implement "update_system.lua"
    .method "add"

interface "idetail"
    .implement "detail_system.lua"
    .method "show"
    .method "selected"
    .method "unselected"

interface "igame_object"
    .implement "engine/game_object.lua"
    .method "create"

interface "igameplay"
    .implement "gameplay_system.lua"
    .method "create_entity"
    .method "remove_entity"
    .method "update_chimney_recipe"

----------------------------------------------------
----------------------------------------------------
-- render_updates
system "assembling_system"
    .implement "render_updates/assembling.lua"
    .method "update_world"

system "daynight_system"
    .implement "render_updates/daynight.lua"
    .method "update_world"

system "building_system"
    .implement "render_updates/building.lua"
    .method "update_world"

system "inventory_system"
    .implement "render_updates/inventory.lua"
    .method "update_world"

system "drone_system"
    .implement "render_updates/drone.lua"
    .method "update_world"

system "drone_depot_systme"
    .implement "render_updates/drone_depot.lua"
    .method "update_world"

system "work_state_system"
    .implement "render_updates/work_state.lua"
    .method "update_world"

system "task_system"
    .implement "render_updates/task.lua"
    .method "update_world"

system "storage_tank_system"
    .implement "render_updates/storage_tank.lua"
    .method "update_world"

system "statistic_system"
    .implement "render_updates/statistic.lua"
    .method "update_world"

system "station_system"
    .implement "render_updates/station.lua"
    .method "update_world"

system "guide_system"
    .implement "render_updates/guide.lua"
    .method "update_world"

system "science_system"
    .implement "render_updates/science.lua"
    .method "update_world"

system "lorry_system"
    .implement "render_updates/lorry.lua"
    .method "update_world"

system "fluidbox_system"
    .implement "render_updates/fluidbox.lua"
    .method "update_world"