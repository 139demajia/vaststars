import "@ant.objcontroller"
import "@ant.animation"
import "@ant.camera"
import "@ant.modifier"
import "@ant.terrain"
import "@ant.motion_sampler"
import "@mod.printer"
import "@ant.daynight"
import "@mod.billboard"
import "@ant.debug"
import "@ant.landform"
import "@ant.starsky"
import "@mod.shadow_aabb_update"

pipeline "init"
    .stage "init"
    .stage "post_init"

pipeline "exit"
    .stage "exit"

pipeline "update"
    .stage "timer"
    .stage "start_frame"
    .stage "data_changed"
    .stage  "widget"
    .pipeline "sky"
    .pipeline "animation"
    .pipeline "motion_sample"
    .pipeline "scene"
    .pipeline "camera"
    .pipeline "collider"
    .pipeline "render"
    .pipeline "select"
    .pipeline "ui"
    .stage "frame_update"
    .stage "end_frame"
    .stage "final"

pipeline "ui"
    .stage "ui_start"
    .stage "ui_update"
    .stage "ui_end"

pipeline "gameworld"
    .stage "gameworld_start"
    .stage "gameworld_update"
    .stage "gameworld_end"

pipeline "gameworld_prebuild"
    .stage "gameworld_prebuild"

pipeline "gameworld_build"
    .stage "gameworld_build"

pipeline "gameworld_clean"
    .stage "gameworld_clean"

pipeline "prototype"
    .stage "prototype_restore"

feature "engine"
    .require_feature "ant.efk"
    .require_feature "ant.rmlui"
    .require_feature "ant.sky|sky"

----------------------------------------------------
----------------------------------------------------
policy "engine"
    .include_policy "ant.render|csm_queue"
    .include_policy "ant.render|skinrender"
    .include_policy "ant.motion_sampler|motion_sampler"
    .include_policy "ant.daynight|daynight"
    .include_policy "ant.render|indirect"
    .include_policy "ant.render|draw_indirect"
    .include_policy "ant.render|ibl"
    .include_policy "ant.starsky|starsky"
    .require_system "ant.modifier|modifier_system"
    .require_system "ant.animation|animation_system"
    .require_system "ant.animation|motion_system"
    .require_system "ant.animation|slot_system"
    .require_system "ant.render|draw_indirect_system"
    .require_system "ant.terrain|canvas_system"
    .require_system "ant.render|hitch_system"
    .require_system "ant.starsky|starsky_system"

policy "mod"
    .require_system "ant.landform|terrain_system"
    .require_system "ant.landform|stone_mountain_system"
    .require_system "ant.landform|road_system"
    .require_system "ant.landform|translucent_plane_system"
    .require_system "mod.billboard|billboard_system"
    .require_system "mod.shadow_aabb_update|shadow_aabb_update_system"

policy "engine_utils"
    .require_system "camera_controller"
    .require_system "entity_object_system"
    .require_system "debug_system"
    .require_system "update_system"

policy "render_updates"
    .require_system "assembling_system"
    .require_system "daynight_system"
    .require_system "building_system"
    .require_system "inventory_system"
    .require_system "drone_system"
    .require_system "work_state_system"
    .require_system "task_system"
    .require_system "storage_tank_system"
    .require_system "statistic_system"
    .require_system "station_system"
    .require_system "guide_system"
    .require_system "science_system"
    .require_system "lorry_system"
    .require_system "fluidbox_system"
    .require_system "road_system"
    .require_system "chimney_system"

policy "gameplay"
    .require_system "pick_object_sys"
    .require_system "prototype_cache_system"
    .require_system "power_check_system"

----------------------------------------------------
----------------------------------------------------
system "init_system"
    .require_policy "engine"
    .require_policy "engine_utils"
    .require_policy "mod"
    .implement "init_system.lua"

system "game_init_system"
    .require_policy "engine"
    .require_policy "engine_utils"
    .require_policy "render_updates"
    .require_policy "mod"
    .require_policy "gameplay"
    .implement "game_init_system.lua"

----------------------------------------------------
----------------------------------------------------
-- engine_utils
system "ui_system"
    .implement "engine/system/ui_system.lua"

system "camera_controller"
    .implement "engine/system/camera_controller.lua"

system "entity_object_system"
    .implement "engine/system/entity_object_system.lua"

system "debug_system"
    .implement "debug_system.lua"

system "update_system"
    .implement "update_system.lua"

system "pick_object_sys"
    .implement "pick_object_system.lua"

----------------------------------------------------
----------------------------------------------------
-- render_updates
system "assembling_system"
    .implement "render_updates/assembling.lua"

system "daynight_system"
    .implement "render_updates/daynight.lua"

system "building_system"
    .implement "render_updates/building.lua"

system "inventory_system"
    .implement "render_updates/inventory.lua"

system "drone_system"
    .implement "render_updates/drone.lua"

system "work_state_system"
    .implement "render_updates/work_state.lua"

system "task_system"
    .implement "render_updates/task.lua"

system "storage_tank_system"
    .implement "render_updates/storage_tank.lua"

system "statistic_system"
    .implement "render_updates/statistic.lua"

system "station_system"
    .implement "render_updates/station.lua"

system "guide_system"
    .implement "render_updates/guide.lua"

system "science_system"
    .implement "render_updates/science.lua"

system "lorry_system"
    .implement "render_updates/lorry.lua"

system "fluidbox_system"
    .implement "render_updates/fluidbox.lua"

system "ing_res_motion_system"
    .implement "render_updates/ing_res_motion.lua"

system "road_system"
    .implement "render_updates/road.lua"

system "chimney_system"
    .implement "render_updates/chimney.lua"

system "power_check_system"
    .implement "power_check_system.lua"

system "prototype_cache_system"
    .implement "prototype_cache.lua"
