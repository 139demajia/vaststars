<rml>
    <head>
        <style>
            body {
                font: 100% "微软雅黑";
            }
            .button-container {
                display: flex;
                flex-direction: row;
                justify-content: center;
                align-items: flex-end;
                height: 100vh;
            }
            button {
                margin-left: 0.7vw;   /* spacing between each button */
                margin-bottom: 2.6vh; /* gap between the button and the bottom edge of the interface */
                text-align: center;
                font-size: 4.00vmin;
                border-radius: 2.00vmin;
                border: 0.53vmin white;
                transition: transform 0.15s elastic-out;
            }
        </style>
        <script type="text/x-lua" >
            local ui_sys = require "ui_system"
            local start = ui_sys.createDataMode("start", {
                buttons = {},
                show_cancel = false,
                show_rotate = false,
                show_confirm = false,
            })

            start.buttons[#start.buttons+1] = {name = "取消", show_var = "show_cancel", show = false, param = "cancel", background_color = "rgb(105, 112, 8)", background_image = "textures/cmdcenter/yellow_arrow.texture"}
            start.buttons[#start.buttons+1] = {name = "旋转建筑", show_var = "show_rotate", show = false, param = "rotate", background_color = "rgb(105, 112, 8)", background_image = "textures/construct/rotate.texture"}
            start.buttons[#start.buttons+1] = {name = "修建", show_var = "show_confirm", show = false, param = "build", background_color = "rgb(105, 112, 8)", background_image = "textures/construct/confirm.texture"}
            start("buttons")

            function start.clickButton(event, param)
                ui_sys.pub {param}
            end

            local function getMappingParam(var)
                local function getButton(var)
                    for i = 1, #start.buttons do
                        if start.buttons[i].show_var == var then
                            return start.buttons[i]
                        end
                    end
                end
                return function(_, v)
                    local button = getButton(var)
                    if button then
                        button.show = v
                        start("buttons")
                    end
                end, var
            end
            --
            ui_sys.mapping(start, {
                {getMappingParam("show_cancel")},
                {getMappingParam("show_confirm")},
            })
        </script>
    </head>
    <body style = "pointer-events: none;">
        <div class="button-container" data-model="start" style = "pointer-events: none;">
            <button style="width: 22.00vmin; height: 16.00vmin;" data-style-background-color = "it.background_color" data-event-click="clickButton(it.param)" data-for = "it : buttons" data-if = "it.show">
                <div style="margin: 0 auto; width: 11.20vmin; height: 11.20vmin; background-size:cover;" data-style-background-image = "it.background_image" />
                <div style="font-size: 85%;">{{it.name}}</div>
            </button>
        </div>
    </body>
</rml>