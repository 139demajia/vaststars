<rml>
    <head>
        <style>
            body {
                font: 100% "宋体";
            }
            .right-panel {
                background-color: rgb(44, 32, 18);
                border: 0.2vmin rgb(89, 73, 39);
                border-radius: 0.67vmin;
                margin:auto 0.3em;
                width: 35%;
                height: 90%;
                justify-content: space-evenly;
            }
            .item-name-block {
                background-color: rgb(203, 118, 24);
                width: 100%;
                height:8%;
                flex-direction: row;
                justify-content: space-between;
                align-items: center;
                border: 0.10vmin rgb(89, 73, 39);
            }
            .name-block {
                background-color: rgb(203, 118, 24);
                height:100%;
                flex-direction: row;
                justify-content: flex-start;
                align-items: center;
            }
            .button-block {
                width: 100%;
                height:20%;
                flex-direction: row;
                align-items: center;
                justify-content: space-evenly;
                background-color: rgb(44, 32, 18);
                font-size: 3.47vmin;
            }
            .item-name-text {
                padding-bottom: 0.25em;
                margin:0 0.5em 0 0;
                font-size: 4.73vmin;
                text-align: center;
                -webkit-text-stroke: 0.05em rgb(0,0,0);
            }
        </style>
        <style path = "common/building_style.rcss"/>
        <style path = "common/listpage_style.rcss"/>
        <script type="text/x-lua" >
            local ui_sys = require "ui_system"
            local start = ui_sys.createDataMode("start", {
                categories = {}, -- = {{name = xx, icon = xx}, ...}
                category_index = 0,
                items = {}, -- = {{name = xx, icon = xx}, ...}
                item_indexes = {}, -- = {category_index = selected_item_index, ...}

                item_index = 0,
                item_name = " ",
                item_desc = " ",
            })

            local function clickItem(index)
                local item = start.items[index]
                if not item then
                    return
                end
                ui_sys.pub {"click_item", item.id}
                start.item_index = index
                start.item_name = item.name
                start.item_desc = item.desc
            end

            function start.clickClose(event)
                ui_sys.close()
            end

            function start.clickConfirm(event)
                ui_sys.pub {"set_item", start.item_index}
                ui_sys.close()
            end

            function start.clickCategory(event, it_index)
                start.catalog_index = it_index + 1
                ui_sys.pub {"click_category", start.catalog_index}
            end

            local select_item
            -- <!-- tag page begin -->
            local function page_item_update(item, index)
                item.removeEventListener('click')
                if index > #start.items then
                    item.outerHTML = [[<div style = "width: 100%; height: 100%;" />]]
                else
                    item.outerHTML = ([[<div class = "item" style = "width: 100%%; height: 100%%; backgroundImage: %s"></div>]]):format(start.items[index].icon)
                    local select_style_border = "4px rgb(109, 47, 156)"
                    if start.item_index == index then
                        select_item = item
                        item.style.border = select_style_border
                    end
                    item.addEventListener('click', function(event)
                        if select_item then
                            select_item.style.border = '0px green' -- TODO: define style
                        end
                        item.style.border = select_style_border
                        clickItem(index)
                        select_item = item
                    end)
                end
            end
            local function page_item_init(item, index)
                page_item_update(item, index)
            end
            local pageclass = require "page"
            window.customElements.define("page", function(e)
                start.page = pageclass.create(document, e, page_item_init, page_item_update)
            end)
            -- <!-- tag page end -->

            ui_sys.mapping(start, {
                {
                    "category_index",
                    function()
                        if select_item then
                            select_item.style.border = '0px green'
                        end
                        select_item = nil

                        start.item_index = assert(start.item_indexes[start.category_index])
                        start.page:on_dirty_all(#start.items)

                        clickItem(start.item_index)
                    end
                },
            })
        </script>
    </head>
    <body>
        <div class="item-container-region"  style="width:100%;  background-color: rgb(0,0,0); justify-content: center;" data-model="start">
            <div class="panel" style= "flex-direction: column;">
                <div class="header" id = "item-name-block">
                    <button class = "back-button" data-event-click="clickClose()"/>
                    <div class = "menu-title" style="width: 70%;">修改物品</div>
                </div>

                <!-- tag page begin -->
                <div class="panel" style = "width: 100%; height: 69.00vmin;">
                    <page width = '79.33vmin' height = '66.00vmin' footerheight= '4.00vmin' row='5' col='6' />
                </div>
                <!-- tag page end -->

                <div class = "draw-line"/>
                <div class = "tab-container" style="flex-grow: 1;">
                    <div data-for = "categories" style = "justify-content: center; align-items: center; flex-basis: 30%; height: 49%;">
                        <workbutton data-event-click="clickCategory(it_index)" data-style-background-color = "it_index + 1 == category_index ? 'rgb(0,176,80)' : 'rgb(246, 142, 14)'" style = "width: 100%;">
                            <div class="workbutton-bg" data-style-background-image="it.icon"/>
                            <div class="catalog-desc">{{it.category}}</div>
                        </workbutton>
                    </div>
                </div>

            </div>

            <div class="right-panel" style = "flex-direction: column; height: 100%;" data-if="item_name != ' '">
                <div class = "item-name-block">
                    <div class = "name-block">
                        <div class = "small-bg" style='background-image: "textures/science/book.texture"; width:4.8vmin; height:4.8vmin;'/>
                        <div class = "item-name-text" style="-webkit-text-stroke: 0.2vmin rgb(0, 112, 192); font-size: 5vmin;">{{item_name}}</div>
                    </div>
                </div>
                <div class = "recipe-change-block" style="height:75%;">
                    <div class = "materials-block" style="height:70%"> 
                        <div class = "materials" style="height:100%">
                            <div class = "materials-item">
                                <div class = "materials-name" style="text-align: left; word-break: break-all; font-size: 5vmin;">{{item_desc}}</div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class = "button-block">
                    <button class = "confirm-button" style="background-color:rgb(52, 207, 115);" data-event-click = "clickConfirm()">
                        <div class="middle-bg" style='background-image: "textures/construct/work.texture";'/>
                        <div class = "item-name-text" style="font-size: 5.73vmin;">确定</div>
                    </button> 
                </div>
            </div>
        </div>
    </body>
</rml>