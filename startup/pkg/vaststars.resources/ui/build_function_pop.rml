<rml>
    <head>
        <style>
            body {
                font: 100% "宋体";
            }
            div {
                font: 100% "微软雅黑";
            }
            .title-text {
                text-align: center;
                font-size: 3.80vmin;
                color: gold;
                -webkit-text-stroke: 0.15vmin rgb(0, 0, 0);
                position: relative;
                bottom:0.5em;
            }
            .button-fuction-block {
                width: 13.33vmin;
            }
            .button-function {
                flex-direction: row;
                justify-content: center;
                align-items: center;
                width: 13.33vmin;
                height: 13.33vmin;
                background-size: cover;
            }
            .info-panel {
                height: 30.00vmin;
                width: 83.47vmin;
                background-image: "textures/common/info-arc.texture";
                background-size:cover;
            }
        </style>
        <style path = "common/building_style.rcss"/>
        <script type="text/x-lua" >
            local ui_sys = require "ui_system"
            local start = ui_sys.createDataMode("start", {
                object_position = {},
                show_teardown = false,
                show_move = false,
                show_set_recipe = false,
                show_road_builder = false,
                show_detail = false,
                object_id = 0,
                guide_progress = 0,
                left = "0vmin",
                top = "0vmin",
                buttons = {},
            })

            local positions <const> = {
                [1] = {
                    {top = "15.00vmin", left = "2vmin"},
                },
                [2] = {
                    {top = "15.00vmin", left = "2vmin"},
                    {top = "15.00vmin", left = "69.34vmin"},
                },
                [3] = {
                    {top = "15.00vmin", left = "2vmin"},
                    {top = "-2vmin", left = "35vmin"},
                    {top = "15.00vmin", left = "69.34vmin"},
                },
                [4] = {
                    {top = "15.00vmin", left = "2vmin"},
                    {top = "0.00vmin", left = "21.62vmin"},
                    {top = "0.00vmin", left = "48.48vmin"},
                    {top = "15.00vmin", left = "69.34vmin"},
                },
                [5] = {
                    {top = "15.00vmin", left = "2vmin"},
                    {top = "3.00vmin", left = "16.62vmin"},
                    {top = "-2vmin", left = "35vmin"},
                    {top = "3.00vmin", left = "53.48vmin"},
                    {top = "15.00vmin", left = "69.34vmin"},
                },
            }

            function start.clickButton(event, message)
                ui_sys.pub {message, start.object_id}
            end

            ui_sys.addEventListener({
                ["leave"] = function()
                    ui_sys.pub {"close", start.object_id}
                    ui_sys.close()
                end,
            })

            local PANDEL_WIDTH <const> = 83.47 -- the unit is vmin
            local PANDEL_HEIGHT <const> = 30
            local OFFSET_LEFT <const> = PANDEL_WIDTH / 2
            local OFFSET_TOP <const> = PANDEL_HEIGHT
            local popup_bound = require "lua.popup_bound"
            ui_sys.mapping(start, {
                {
                    function(_, left, top)
                        local move_camera, _left, _top = popup_bound(left, top, OFFSET_LEFT, OFFSET_TOP, PANDEL_WIDTH, PANDEL_HEIGHT)
                        start.left, start.top = ("%0.2fvmin"):format(_left), ("%0.2fvmin"):format(_top)
                        if move_camera then
                            ui_sys.world_pub {"ui_message", "move_camera", _left + OFFSET_LEFT, _top + OFFSET_TOP, start.object_position}
                        end
                    end,
                    "left", "top",
                },
                {
                    function(_)
                        start.buttons = {}
                        if start.show_teardown then
                            local v = {}
                            v.text = "拆除"
                            v.message = "teardown"
                            v.background_image = "textures/factory/demolition.texture"
                            start.buttons[#start.buttons + 1] = v
                        end

                        if start.show_move then
                            local v = {}
                            v.text = "移动"
                            v.message = "move"
                            v.background_image = "textures/factory/move.texture"
                            start.buttons[#start.buttons + 1] = v
                        end

                        if start.show_set_recipe then
                            local v = {}
                            v.text = "修改配方"
                            v.message = "set_recipe"
                            v.background_image = "textures/assemble/wheel.texture"
                            start.buttons[#start.buttons + 1] = v
                        end

                        if start.show_road_builder then
                            local v = {}
                            v.text = "道路建造"
                            v.message = "road_builder"
                            v.background_image = "textures/common/road-connect.texture"
                            start.buttons[#start.buttons + 1] = v
                        end

                        if start.show_detail then
                            local v = {}
                            v.text = "详细"
                            v.message = "detail"
                            v.background_image = "textures/factory/seacher.texture"
                            start.buttons[#start.buttons + 1] = v
                        end

                        console.log(#start.buttons)
                        local pos = assert(positions[#start.buttons])
                        for i = 1, #start.buttons do
                            local v = start.buttons[i]
                            v.left = pos[i].left
                            v.top = pos[i].top
                            start.buttons[#start.buttons + 1] = v
                        end
                        start("buttons")
                    end,
                    "show_teardown", "show_move", "show_set_recipe", "show_road_builder", "show_detail",
                }
            })
        </script>
    </head>
    <body style = "pointer-events: none;">
        <div class="info-panel" style="position: relative; pointer-events: none;" data-model="start" data-style-left = "left" data-style-top = "top">
            <div class="button-fuction-block" style="position: absolute;" data-style-top="it.top" data-style-left="it.left" data-event-click="clickButton(it.message)" data-for = "it : buttons">
                <button class="button-function" data-style-background-image = "it.background_image" />
                <div class="title-text">{{it.text}}</div>
            </div>
        </div>
    </body>
</rml>