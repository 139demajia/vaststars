<rml>
    <head>
        <style path = "common.rcss"/>
        <style>
            .main-menu-button {
                margin : 0 0.5em;
                width: 15.33vmin;
                height: 15.33vmin;
                flex-direction: column;
                align-items: center;
                justify-content: center;
            }
            .menu-button-pic {
                background-size: cover;
                width: 12.67vmin;
                height: 12.67vmin;
            }
            .progress-bar-block {
                margin:0 0 0.05em 0;
                justify-content: flex-start;
                border: 0.13vmin #fff;
            }
            .progress-background {
                justify-content: flex-start;
                width: 60%;
                height: 100%;
                background-color: rgb(87, 238, 0);
            }
            p {
                animation:0.5s linear 0s infinite alternate rotation;
            }
            @keyframes rotation {
                from {
                    transform: rotate(0);
                }

                to {
                    transform: rotate(-10deg);
                }
            }
            .progress-num {
                width:100%; 
                position:absolute; 
                bottom:0; 
                font-size: 3vmin; 
                text-align: center;
                -webkit-text-stroke: 0.2vmin #000;
            }
            .progress-item-block {
                width:92%; 
                height:3.2vmin;
                position:absolute; 
                left: 0.5vmin;
                bottom:3.4vmin;
                justify-content: center;
                flex-direction: row;
                align-items:center;
                background-color: rgba(0,0,0,120);
                border-radius: 1vmin;
                border: 0.1vmin rgba(0,0,0,120);
            }
            .progress-item {
                width:3.4vmin;
                height:3.4vmin;
                background-size: cover;
            }
            .button-container {
                justify-content: flex-end;
                align-items: flex-end;
                width: 37.08%;
                height: 65.27%;
                position: absolute;
                top: 34.73%;
                left: 62.92%;
                pointer-events: none;
            }

            .building-button-container {
                flex-direction: row-reverse;
                align-items: flex-start;
                transform-origin: 100% 100%;
                width: 37.08%;
                height: 65.27%;
                padding: 0vmin;
                margin: 0vmin;
                position: absolute;
                top: 34.73%;
                left: 62.92%;
                pointer-events: none;
            }
            .building-button {
                background-size: cover;
            }
            .building-button:active {
                transform: scale(1.2);
            }
            construct-box {
                position: absolute;
                left: 5.03vmax;
                top: 0.62vmin;
                width: 39.30vmax;
                height: 98.52vmin;
                background-image: "textures/construct/square-grid.texture";
                background-size: 100% 100%;
                background-lattice: 4.28%;
            }
            construct-list {
                left: 0.86vmax;
                top: 2.95vmin;
                width: 39.00vmax;
                height: 93.00vmin;
                margin-left: -1vmax;
                overflow: scroll;
            }
            item {
                width: 16.40vmin;
                height: 16.40vmin;
                background-size: 100% 100%;
                justify-content: center;
                align-items: center;
                margin-right: -1.57vmax;
                margin-bottom: -1.57vmax;
            }
            item-detail {
                position: absolute;
                left: 62.35vmax;
                top: 2.70vmin;
                width: 31.92vmax;
                height: 32.63vmin;
                background-image: "textures/construct/item-detail.texture";
                background-size: 100% 100%;
            }
        </style>
        <script type="text/x-lua" >
            local ui_sys = require "ui_system"
            local start = ui_sys.createDataMode {
                is_concise_mode = false, -- in concise mode, the main menu in the lower left corner, technology progress button in the upper right corner and help button in the upper left corner are not displayed
                show_tech_progress = false,     --是否显示科技进度
                is_task = false,                --是否是任务
                current_tech_icon = "none",     --当前科技图标
                current_tech_name = "none",     --当前科技名字
                current_tech_progress = "0%",   --当前科技进度
                current_tech_progress_detail = "0/0",  --当前科技进度（数量）
                show_ingredient = false,
                ingredient_icons = {},
                guide_progress = 0,
                construct_menu = {},
                status = "normal",
                focus_building_icon = "none",
                item_name = "",
                item_desc = "",
                buttons = {},
                shortcut = {}
            }
            local TRANSFORM_DELTA <const> = 15
            local LINE_MARGIN_RIGHT_DELTA <const> = -4
            local LINE_TRANSFORM_DELTA <const> = -7
            for i = 1, 5 do
                start.buttons[i] = {
                    prototype_name = "",
                    icon = "",
                    outer_transform = ("rotate(%sdeg)"):format(-TRANSFORM_DELTA * (i - 1)),
                    inner_transform = ("rotate(%sdeg)"):format(TRANSFORM_DELTA * (i - 1)),
                    line_margin_right = ("%svmin"):format(LINE_MARGIN_RIGHT_DELTA * (i - 1) + 11),
                    line_transform = ("rotate(%sdeg)"):format(LINE_TRANSFORM_DELTA * (i - 1))
                }
            end

            function start.clickButton(...)
                -- console.log(...)
                ui_sys.pub {...}
            end
            function start.clickConstruct(...)
                start.is_concise_mode = not start.is_concise_mode
            end
            function start.clickShowConstructMenuDetail(construct_menu)
                start.cur_construct_menu = construct_menu
            end
            ui_sys.mapping(start, {
                {
                    function()
                        for i = 1, 5 do
                            local prototype_name = ""
                            local icon = ""
                            if start.shortcut[i] then
                                prototype_name = start.shortcut[i].prototype_name
                                icon = start.shortcut[i].icon
                            end

                            start.buttons[i] = {
                                prototype_name = prototype_name,
                                icon = icon,
                                outer_transform = ("rotate(%sdeg)"):format(-TRANSFORM_DELTA * (i - 1)),
                                inner_transform = ("rotate(%sdeg)"):format(TRANSFORM_DELTA * (i - 1)),
                                line_margin_right = ("%svmin"):format(LINE_MARGIN_RIGHT_DELTA * (i - 1) + 11),
                                line_transform = ("rotate(%sdeg)"):format(LINE_TRANSFORM_DELTA * (i - 1))
                            }
                        end
                        start("buttons")
                    end,
                    "shortcut",
                },
            })
            function init()
                local e = assert(document.getElementById "construct-list")
                e.addEventListener("pan", function(param)
                    e.scrollTop = e.scrollTop - (param.vy * 0.045)
                end)
            end
        </script>
    </head>
    <body style = "pointer-events: none; justify-content: center; align-items: center;" onload="init()">
        <!-- 帮助按钮 -->
        <button  class = "main-menu-button" style="border: 0.00vmin; position: absolute; left:-6.7vmin; top: -4vmin;" data-event-click="clickButton('help')" data-if = "(not is_concise_mode) and guide_progress >= 10">
            <div class = "menu-button-pic" style='width:9vmin; height:9vmin; background-image:"textures/common/help.texture"'/>
        </button>

        <!-- 右上角：当前科技进度 -->
        <div data-if = "not is_concise_mode and show_tech_progress" style = "pointer-events: none; position: absolute; right:0vmin; top:0vmin;  width: 97vmax; height: 98.5vmin; flex-direction: row-reverse; align-items: flex-start; padding-top: 1vmin;">
            <button style='background-color:rgb(204,219,11);  width: 16.00vmin; height: 16.00vmin; align-items: center;' data-event-click="clickButton('click_techortaskicon', is_task)">
                <div style="position:absolute; left:3.5vmin; bottom:2.7vmin; width: 50%; height: 50%; background-size:cover;" data-style-background-image="current_tech_icon"/>
                    <div style="-webkit-text-stroke: 0.3vmin rgb(39, 32, 17);font-size: 3.5vmin; word-break: break-all;">{{current_tech_name}}</div>
                    <div class="progress-bar-block" style = "position:absolute; bottom: -4.1vmin; width:100%; height:20%; border-radius: 0.3vmin; background-color: rgb(194, 194, 194);">
                        <div class="progress-background" data-style-width="current_tech_progress"/>
                        <!-- 右上角：当前科技进度数字标识x/y -->
                        <div class="progress-num">{{current_tech_progress_detail}}</div>

                    <!-- 右上角：当前科技需要科技包图标 -->
                    <div class="progress-item-block" data-if = "show_ingredient">
                        <div class="progress-item" data-style-background-image = "it.icon" data-for = "ingredient_icons"/>
                    </div>
                </div> 
                <p data-if="is_task" style="position: absolute; left:-1vmin; top:-0.75vmin;">
                    <div style='width:2.8vmin; height:7.6vmin; background-image: "textures/common/exclamation2.texture"; background-size: cover;'/>
                </p>
            </button>
        </div>

        <construct-box data-if="is_concise_mode">
            <construct-list id = "construct-list">
                <div style = "width: 100%; align-items: flex-start;" data-for = "c, c_index : construct_menu">
                    <div style = "position: absolute; left: 0vmin; top: 0vmin; background-image: textures/item-config/category-bg.texture; width: 23.50vmax; height: 23.13vmin; background-size: 100% 100%;" />
                    <div style = "margin-left: 5.58vmin; margin-top: 2.58vmin; width: 100%; flex-direction: row; font-size: 4.20vmin;">{{c.category}}</div>
                    <div style = "flex-direction: row; flex-wrap: wrap;">
                        <item data-event-click = "clickButton('click_item', c_index, i_index)" data-style-background-image = "i.selected and 'textures/item-config/item-active.texture' or 'none'" data-for = "i, i_index : c.items">
                            <div data-style-background-image = "i.icon" style = "width: 6.91vmax; height: 6.91vmax; background-size: 100% 100%; background-color: rgb(61, 61, 61);" />
                            <div style = "position: absolute; width: 6.91vmax; height: 6.91vmax; justify-content: flex-end; align-items: flex-end; font-size: 3.5vmin; color:rgb(255,255,255); -webkit-text-stroke: 0.26vmin rgb(0,0,0);" data-style-color = " i.count >0 and 'rgb(255,255,255)' or 'rgb(255,0,0)' ">{{i.count}}</div>
                        </item>
                    </div>
                </div>
            </construct-list>
        </construct-box>

        <item-detail data-if="is_concise_mode">
            <item-name style = "position: absolute; left: 15.20vmax; top: 2.94vmin; width: 13.21vmax; height: 4.67vmin; font-size: 4.67vmin;" data-if = "item_name ~= ''">{{item_name}}</item-name>
            <item-desc style = "position: absolute; left: 15.73vmax; top: 9.26vmin; width: 13.21vmax; height: 12.61vmin; word-break: break-word; font-size: 3.00vmin;" data-if = "item_desc ~= ''">{{item_desc}}</item-desc>
            <item-icon style = "position: absolute; left: 1.00vmax; top: 2.91vmin; width: 13.85vmax; height: 27.02vmin; background-image: <item_model>; background-size: 100% 100%;" />
        </item-detail>

        <div class = "building-button-container" data-style-transform = "it.outer_transform" data-for = "buttons" data-if="is_concise_mode">
            <div style = "position: absolute; pointer-events: none; width: 18.23vmin; height: 52.655%; margin-top: 4.115vmin; margin-bottom: 9.115vmin; background-image: textures/building-menu/line.texture; background-size: contain;" data-style-transform = "it.line_transform" data-style-margin-right = "it.line_margin_right" />
            <div class = "building-button" style = "position: absolute; pointer-events: none; margin-top: -5vmin; margin-right: 9vmin; width: 18.23vmin; height: 18.23vmin;" data-style-transform = "it.inner_transform">
                <div class = "building-button" style = "position: absolute; width: 18.23vmin; height: 18.23vmin;" data-style-background-image = "it.icon ~= '' and 'textures/construct/building-bg.texture' or 'textures/construct/building-unknown.texture'" />
                <div class = "building-button" style = "margin-top: 1vmin; margin-left: 2.0vmin; position: absolute; width: 14.70vmin; height: 14.70vmin; border-radius: 50%;" data-style-background-image = "it.icon" data-if = "it.icon ~= ''" data-event-click = "clickButton('construct_entity', it.prototype_name)" />
            </div>
        </div>

        <div class = "button-container" data-if = "status == 'normal'">
            <div class = "building-button" style = "margin-right: 8.00vmax; margin-bottom: 5.23vmin; width: 27.41vmin; height: 27.41vmin; background-image: textures/construct/construct.texture;" data-event-click = "clickButton('construct')" />
        </div>
        <div class = "button-container" data-if = "status == 'focus'">
            <div class = "building-button" style = "margin-right: 8.00vmax; margin-bottom: 5.23vmin; width: 27.41vmin; height: 27.41vmin; background-image: textures/construct/building-background.texture; align-items: center; justify-content: center;" data-event-click = "clickButton('selected')">
                <div data-style-background-image = "focus_building_icon" style = "background-size: cover; width: 17.06vmin; height: 17.06vmin;" />
            </div>
        </div>
    </body>
</rml>